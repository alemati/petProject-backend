{"version":3,"sources":["services/loginService.js","services/userService.js","services/postService.js","services/commentService.js","services/skillService.js","reducers/notificationReducer.js","reducers/loginReducer.js","components/Notification.js","components/LoginView.js","reducers/usersReducer.js","components/UserCreationView.js","reducers/postsReducer.js","components/TopBar.js","components/SideBarNavigation.js","components/UsersList.js","reducers/commentsReducer.js","components/CommentForm.js","components/CommentsList.js","components/PostPage.js","components/PostForm.js","components/HomeView.js","reducers/skillsReducer.js","components/SkillForm.js","components/PersonalPage.js","components/UserPage.js","App.js","Store.js","index.js"],"names":["login","credentials","a","axios","post","response","console","log","data","baseUrl","getById","id","get","getAll","createNew","newObject","setToken","newToken","removeToken","update","put","res","token","remove","delete","config","headers","Authorization","setNotification","type","content","dispatch","closeNotification","obj","reducer","state","action","Notification","notification","useSelector","useHistory","useDispatch","Alert","variant","LoginView","useState","username","setUsername","password","setpassword","Modal","Dialog","Header","Title","onSubmit","event","preventDefault","loginService","user","window","localStorage","setItem","JSON","stringify","userService","postService","commentService","skillService","setTimeout","Body","value","placeholder","onChange","target","Footer","Button","to","updateUser","usersService","updated","concat","map","UserCreationPage","url","setUrl","name","setName","history","createdUser","push","newState","filter","p","TopBar","className","onClick","removeItem","SideBarNavigation","Friends","users","allOtherUsers","myRecieved","currentUser","find","u","friends","includes","length","status","UserLine","updatedRequests","requests","idInList","updatedCurrentUser","secondUser","updatedReceived","received","updatedsecondUser","handleRemoveRequest","updatedFriends","updatedSecondUser","handleAccept","handleDecline","updatedRFriends","secondUpdatedFriends","removeFriend","currentUserUpdated","requestedFriend","requestedFriendUpdated","handleSendRequest","UsersList","myRequests","myFriends","neutralUser","Accordion","defaultActiveKey","Card","Toggle","as","eventKey","Collapse","CommentForm","postId","setValue","handleCreateNewComment","newComment","createdComment","CommentLine","comment","creator","CommentList","commentsToPost","comments","c","PostLine","handleDeletePost","postsWithoutPostId","posts","idd","userUpdated","CommentsList","postCreator","PostPage","allPosts","postIds","f","postsByFriends","PostForm","contentt","setContentt","newPost","likes","createdPOST","HomeView","s","SkillLine","skill","handleDeleteSkill","skillId","updatedSkillList","skills","updatedUser","SkillForm","allSkills","skillsToShow","sort","e1","e2","newSkill","createdSkill","PersonalPage","userPosts","handleLike","updatedLikeList","updatedSkill","updateSkill","UserPage","useParams","userSkills","App","useEffect","commentsFromServer","usersFromServer","loggedUserJSON","getItem","parse","postsFromServer","skillsFromServer","path","UserCreationView","combineReducers","usersReducer","loginReducer","postsReducer","commentsReducer","skillsReducer","notificationReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bae28004.chunk.js","sourcesContent":["import axios from 'axios'\n// const baseUrl = 'http://localhost:3005/api/login'\nconst baseUrl = '/api/login'\n\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  console.log('response was:', response)\n  return response.data\n}\n\nexport default { login }","import axios from 'axios'\n// const baseUrl = 'http://localhost:3005/api/users'\nconst baseUrl = '/api/users'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n\n}\nconst removeToken = () => {\n  token = null\n\n}\nconst getById = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`)\n  return response.data\n}\n\nconst getAll = async () => {\n  const response = await axios.get(`${baseUrl}`)\n  return response.data\n}\n\nconst createNew = async (newObject) => {\n  const response = await axios.post(baseUrl, newObject)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const res = await axios.put(`${baseUrl}/${id}`, newObject)\n  return res.data\n}\n\nexport default { getAll, getById, createNew, setToken, removeToken, update }","import axios from 'axios'\n// const baseUrl = 'http://localhost:3005/api/posts'\nconst baseUrl = '/api/posts'\n\n\nlet token = null\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n\n}\nconst removeToken = () => {\n    token = null\n\n}\nconst getById = async (id) => {\n    const response = await axios.get(`${baseUrl}/${id}`)\n    return response.data\n}\n\nconst getAll = async () => {\n    const response = await axios.get(`${baseUrl}`)\n    return response.data\n}\n\nconst remove = async (id) => {\n    // console.log('remove is active and id in it is:', id)\n    const response = await axios.delete(`${baseUrl}/${id}`)\n    return response\n  }\n\nconst createNew = async (newObject) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl, newObject, config)\n    return response.data\n}\n\nconst update = async (id, newObject) => {\n    const res = await axios.put(`${baseUrl}/${id}`, newObject)\n    return res.data\n}\n\nexport default { getAll, getById, createNew, setToken, removeToken, update, remove }","import axios from 'axios'\n// const baseUrl = 'http://localhost:3005/api/comments'\nconst baseUrl = '/api/comments'\n\nlet token = null\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n\n}\nconst removeToken = () => {\n    token = null\n\n}\nconst getById = async (id) => {\n    const response = await axios.get(`${baseUrl}/${id}`)\n    return response.data\n}\n\nconst getAll = async () => {\n    const response = await axios.get(`${baseUrl}`)\n    return response.data\n}\n\nconst remove = async (id) => {\n    const response = await axios.delete(`${baseUrl}/${id}`)\n    return response\n}\n\nconst createNew = async (newObject) => {\n    console.log('token is:', token)\n    console.log('newObject (comment) is:', newObject)\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl, newObject, config)\n    return response.data\n}\n\nconst update = async (id, newObject) => {\n    const res = await axios.put(`${baseUrl}/${id}`, newObject)\n    return res.data\n}\n\nexport default { getAll, getById, createNew, setToken, removeToken, update, remove }","import axios from 'axios'\n// const baseUrl = 'http://localhost:3005/api/skills'\nconst baseUrl = '/api/skills'\n\nlet token = null\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n\n}\nconst removeToken = () => {\n    token = null\n\n}\nconst getById = async (id) => {\n    const response = await axios.get(`${baseUrl}/${id}`)\n    return response.data\n}\n\nconst getAll = async () => {\n    const response = await axios.get(`${baseUrl}`)\n    return response.data\n}\n\nconst remove = async (id) => {\n    const response = await axios.delete(`${baseUrl}/${id}`)\n    return response\n  }\n\nconst createNew = async (newObject) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl, newObject, config)\n    return response.data\n}\n\nconst update = async (id, newObject) => {\n    const res = await axios.put(`${baseUrl}/${id}`, newObject)\n    return res.data\n}\n\nexport default { getAll, getById, createNew, setToken, removeToken, update, remove }","const reducer = (state = [], action) => {\n   \n    switch (action.type) {\n      case ('SET_NOTIFICATION'):\n        return action.data\n      case ('CLOSE_NOTIFICATION'):\n        return null\n      default:\n    }\n  \n    return state\n  }\n  \n  export const setNotification = (type, content) => {\n    return async dispatch => {\n      const not = {\n          'type': type,\n          'content': content,\n      }\n      dispatch({\n        type: 'SET_NOTIFICATION',\n        data: not,\n      })\n    }\n  }\n  \n  export const closeNotification = obj => {\n    return async dispatch => {\n      dispatch({\n        type: 'CLOSE_NOTIFICATION',\n      })\n    }\n  }\n  \n  export default reducer","import loginService from '../services/loginService'\nimport userService from '../services/userService'\nimport postService from '../services/postService'\nimport commentService from '../services/commentService'\nimport skillService from '../services/skillService'\nimport { setNotification, closeNotification } from '../reducers/notificationReducer'\n\n\nimport {\n    Link, useHistory\n} from \"react-router-dom\"\n\nconst reducer = (state = null, action) => {\n\n    switch (action.type) {\n        case ('LOGIN'):\n            return action.data\n        case ('LOGOUT'):\n            return null\n        default:\n    }\n    return state\n}\n\nexport const initLogin = () => {\n    return async (dispatch) => {\n        const loggedUserJSON = window.localStorage.getItem('loggedProjectUser')\n        if (loggedUserJSON) {\n            const user = JSON.parse(loggedUserJSON)\n            userService.setToken(user.token)\n            postService.setToken(user.token)\n            commentService.setToken(user.token)\n            skillService.setToken(user.token)\n        }\n        if (loggedUserJSON) {\n            const user = JSON.parse(loggedUserJSON)\n            dispatch({\n                type: 'LOGIN',\n                data: user\n            })\n        }\n    }\n}\n\nexport const login = (username, password) => {\n    return async dispatch => {\n        try {\n            const user = await loginService.login({\n                username,\n                password\n            })\n            window.localStorage.setItem('loggedProjectUser', JSON.stringify(user))\n            userService.setToken(user.token)\n            postService.setToken(user.token)\n            commentService.setToken(user.token)\n            skillService.setToken(user.token)\n            dispatch({\n                type: 'LOGIN',\n                data: user\n            })\n        } catch (exception) {\n            dispatch(setNotification('error', 'Wrong credentials'))\n            setTimeout(() => {\n                dispatch(closeNotification())\n            }, 3000)\n        }\n    }\n}\n\nexport const logout = () => {\n    return async (dispatch) => {\n        userService.removeToken()\n        postService.removeToken()\n        commentService.removeToken()\n        skillService.removeToken()\n        window.localStorage.removeItem('loggedProjectUser')\n        dispatch({\n            type: 'LOGOUT'\n        })\n    }\n}\n\nexport default reducer","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\nimport { closeNotification } from '../reducers/notificationReducer'\n\n\nimport {\n    Link, useHistory\n} from \"react-router-dom\"\n\nconst Notification = () => {\n    const notification = useSelector(state => state.notification)\n    const history = useHistory()\n    const dispatch = useDispatch()\n    if (notification === null) {\n        return null\n    }\n\n    const notType = notification.type === 'error' ? 'Error' : 'Success'\n\n    const solve = () => {\n        dispatch(closeNotification())\n        // history.push('/')\n    }\n\n    return (\n\n        // <div>\n            <Alert variant=\"danger\">\n                {/* <Alert.Heading>{notType}</Alert.Heading> */}\n                <p> {notification.content} </p>\n            </Alert>\n        // </div>\n\n\n        // <div>\n        //     <Modal.Dialog>\n        //         <Modal.Header closeButton>\n        //             <Modal.Title>{notType}</Modal.Title>\n        //         </Modal.Header>\n\n        //         <Modal.Body>\n        //             <p>{notification.content}</p>\n        //         </Modal.Body>\n\n        //         <Modal.Footer>\n        //             <Button onClick={() => solve()} variant=\"primary\">OK</Button>\n        //         </Modal.Footer>\n        //     </Modal.Dialog>\n        // </div>\n\n    )\n}\n\nexport default Notification","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { login } from '../reducers/loginReducer'\nimport Notification from './Notification'\nimport { closeNotification } from '../reducers/notificationReducer'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\n\nimport {\n    Link, useHistory\n} from \"react-router-dom\"\n\n\nconst LoginView = () => {\n    const [username, setUsername] = useState(\"\")\n    const [password, setpassword] = useState(\"\")\n    const dispatch = useDispatch()\n    const history = useHistory()\n    dispatch(closeNotification())\n\n    const handleLogin = (event) => {\n        event.preventDefault()\n        console.log('logining is with:', username, password)\n        dispatch(login(username, password))\n    }\n\n    return (\n        <div>\n            <Modal.Dialog>\n                <Modal.Header>\n                    <Modal.Title>Login</Modal.Title>\n                </Modal.Header>\n\n                <form onSubmit={handleLogin}>\n                    <Modal.Body>\n\n                        Username <input type='text' value={username} placeholder={'3-10 symbols'} onChange={event => setUsername(event.target.value)} />\n                        <br />\n                        Password <input type='password' value={password} placeholder={'3-10 symbols'} onChange={event => setpassword(event.target.value)} />\n\n                    </Modal.Body>\n\n                    <Modal.Footer>\n                        <Notification />\n                        <Button type='submit'>Login</Button>     <Link to=\"/createUser\">create new user</Link>\n                    </Modal.Footer>\n                </form>\n            </Modal.Dialog>\n        </div>\n    )\n}\n\nexport default LoginView;\n","\nimport usersService from '../services/userService'\nimport { setNotification, closeNotification } from '../reducers/notificationReducer'\n\nconst reducer = (state = [], action) => {\n\n    switch (action.type) {\n        case ('CREATE_NEW_USER'):\n            return state.concat(action.data)\n        case ('INIT_USERS'):\n            return action.data\n        case 'UPDATE_USER': {\n            const id = action.data.id\n            return state.map(user => user.id !== id ? user : action.data)\n        }\n        default:\n    }\n    return state\n}\n\nexport const initializeUsers = () => {\n    return async dispatch => {\n        const usersFromServer = await usersService.getAll()\n        dispatch({\n            type: 'INIT_USERS',\n            data: usersFromServer,\n        })\n    }\n}\n\nexport const createNewUser = obj => {\n    \n    return async dispatch => {\n        try {\n            const createdUser = await usersService.createNew(obj)\n            dispatch({\n                type: 'CREATE_NEW_USER',\n                data: createdUser,\n            })\n           \n        } catch (e) {\n            console.log('error is:', e.config)\n            dispatch(setNotification('error', e.name))\n            setTimeout(() => {\n                dispatch(closeNotification())\n            }, 3000)\n        }\n\n    }\n}\n\nexport const updateUser = (user) => {\n    return async dispatch => {\n        const updated = await usersService.update(user.id, user)\n        dispatch({\n            type: 'UPDATE_USER',\n            data: updated,\n        })\n    }\n}\n\n\nexport default reducer","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { createNewUser } from '../reducers/usersReducer'\nimport { setNotification, closeNotification } from '../reducers/notificationReducer'\nimport Notification from './Notification'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\n\nimport {\n    Link, useHistory\n} from \"react-router-dom\"\n\n\nconst UserCreationPage = () => {\n    const [username, setUsername] = useState(\"\")\n    const [password, setpassword] = useState(\"\")\n    const [url, setUrl] = useState(\"\")\n    const [name, setName] = useState(\"\")\n    const history = useHistory()\n\n\n    const dispatch = useDispatch()\n\n    const handleCreateNew = (event) => {\n        event.preventDefault()\n        console.log('creating new user with:', username, password, url, name)\n        if (username === \"\" || password === \"\" || url === \"\" || name === \"\") {\n            dispatch(setNotification('error', 'Give all required info, please'))\n            setTimeout(() => {\n                dispatch(closeNotification())\n            }, 2000)\n        } else {\n            const newUser = {\n                username: username,\n                url: url,\n                password: password,\n                name: name\n            }\n            dispatch(createNewUser(newUser))\n            history.push('/')\n        }\n        \n    }\n\n    return (\n        <div>\n\n            <Modal.Dialog>\n                <Modal.Header>\n                    <Modal.Title>Sign in</Modal.Title>\n                </Modal.Header>\n\n                <form onSubmit={handleCreateNew}>\n                    <Modal.Body>\n                        Username <input type='text' value={username} placeholder={'3-10 symbols'} onChange={event => setUsername(event.target.value)} />\n                        <br />\n                        Password <input type='password' value={password} placeholder={'3-10 symbols'} onChange={event => setpassword(event.target.value)} />\n                        <br />\n                        URL <input type='text' value={url} placeholder={'3-10 symbols'} onChange={event => setUrl(event.target.value)} />\n                        <br />\n                        Name <input type='text' value={name} placeholder={'at least 1 character'} onChange={event => setName(event.target.value)} />\n                    </Modal.Body>\n\n                    <Modal.Footer>\n                        <Notification />\n                        <Button type='submit'>Create new user</Button>     <Link to=\"/\">Login</Link>\n                    </Modal.Footer>\n                </form>\n            </Modal.Dialog>\n        </div>\n    )\n}\n\nexport default UserCreationPage;","import postService from '../services/postService'\nimport Notification from '../components/Notification'\nimport { setNotification, closeNotification } from '../reducers/notificationReducer'\n\n\nconst reducer = (state = [], action) => {\n    switch (action.type) {\n        case ('CREATE_NEW_POST'):\n            return state.concat(action.data)\n        case ('INIT_POSTS'):\n            return action.data\n        case ('REMOVE_POST'):\n            const newState = state.filter(p => p.id !== action.data)\n            return newState\n        default:\n    }\n    return state\n}\n\nexport const initializePosts = () => {\n    return async dispatch => {\n        const postsFromServer = await postService.getAll()\n        dispatch({\n            type: 'INIT_POSTS',\n            data: postsFromServer,\n        })\n    }\n}\n\nexport const createNewPost = obj => {\n    return async dispatch => {\n        try {\n            const createdPOST = await postService.createNew(obj)\n            dispatch({\n                type: 'CREATE_NEW_POST',\n                data: createdPOST,\n            })\n        } catch (e) {\n            console.log('error caught in postReducer', e)\n            dispatch(setNotification('error', 'Post can be at least 3 and at most 200 charachters long!'))\n            setTimeout(() => {\n                dispatch(closeNotification())\n            }, 3000)\n        }\n    }\n}\n\nexport const removePost = (postId) => {\n    return async dispatch => {\n        const res = await postService.remove(postId)\n        dispatch({\n            type: 'REMOVE_POST',\n            data: postId\n        })\n    }\n}\n\nexport default reducer","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { logout } from '../reducers/loginReducer'\nimport Button from 'react-bootstrap/Button'\nimport Notification from './Notification'\n\nimport {\n    useHistory,\n} from \"react-router-dom\"\n\nconst TopBar = () => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const login = useSelector(state => state.login)\n    if (!login) {\n        return null\n    }\n\n    const handleLogout = () => {\n        dispatch(logout())\n        history.push('/')\n    }\n\n    return (\n        <div className=\"topBar\">\n            <div className=\"row\">\n                <div className=\"col-sm-2\">\n                    <h2>Welcome</h2>\n                </div>\n                <div className=\"col-sm-8\">\n                    <p>Logged in as {login.name}</p>\n                </div>\n                <div className=\"col-sm-2\">\n                    <Button className=\"deleteButton\" onClick={handleLogout}>logout</Button>\n                </div>\n\n            </div>\n            <Notification />\n        </div>\n    )\n}\n\nexport default TopBar;","import React from 'react'\nimport { Link } from 'react-router-dom'\n\n\nconst SideBarNavigation = () => {\n\n    return (\n\n        <div>\n            <Link to=\"/home\">Posts</Link> <br />\n            <Link to=\"/connections\">Connections</Link> <br />\n            <Link to=\"/personal\">Personal</Link> <br />\n        </div>\n\n    )\n}\n\nexport default SideBarNavigation;","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { updateUser } from '../reducers/usersReducer'\n\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport TopBar from './TopBar'\n\nimport SideBarNavigation from './SideBarNavigation'\n\n\n\nimport {\n    Link,\n} from \"react-router-dom\"\n\nconst UsersList = () => {\n    const users = useSelector(state => state.users)\n    const login = useSelector(state => state.login)\n\n    const currentUser = users.find(u => u.username === login.username)\n\n    const allOtherUsers = users.filter(u => u.username !== login.username)\n\n    const myRequests = allOtherUsers.filter(u => {\n        if (u.received.includes(currentUser.id)) {\n            return u\n        }\n    })\n    const myRecieved = allOtherUsers.filter(u => {\n        if (u.requests.includes(currentUser.id)) {\n            return u\n        }\n    })\n\n    const myFriends = allOtherUsers.filter(u => {\n        if (u.friends.includes(currentUser.id)) {\n            return u\n        }\n    })\n\n\n    const section = {\n        paddingTop: 5,\n        paddingLeft: 2,\n        paddingRight: 2,\n        paddingBottom: 5,\n        border: 'solid',\n        borderWidth: 2,\n        marginBottom: 5\n    }\n\n\n    const neutralUser = allOtherUsers.filter(u => !myRequests.includes(u) && !myRecieved.includes(u) && !myFriends.includes(u))\n\n\n    return (\n        <div className=\"container\">\n            <TopBar />\n            <hr />\n            <div className=\"row\">\n                <div className=\"col-sm-2\">\n                    <SideBarNavigation />\n                    {/* <UsersList /> */}\n                </div>\n                <div className=\"col-sm-7\">\n                    <h4>Contacts</h4>\n                    <Accordion defaultActiveKey=\"0\">\n\n                        <Card>\n                            <Card.Header>\n                                <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey=\"1\" >\n                                    Friends\n                                </Accordion.Toggle>\n                            </Card.Header>\n                            <Accordion.Collapse eventKey=\"1\">\n                                <Card.Body><Friends login={login} users={users} allOtherUsers={allOtherUsers} myRecieved={myRecieved} /></Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n\n                        <Card>\n                            <Card.Header>\n                                <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey=\"3\" >\n                                    My requests\n                    </Accordion.Toggle>\n                            </Card.Header>\n                            <Accordion.Collapse eventKey=\"3\">\n                                <Card.Body>{myRequests.map(user => <UserLine key={user.id} user={user} users={users} login={login} status={'request'} />)}</Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n\n                    </Accordion>\n                </div>\n                <div className=\"col-sm-3\">\n                    <h4>Other users</h4>\n                    <div className=\"user-list\">\n                        {neutralUser.map(user => <UserLine key={user.id} user={user} users={users} login={login} status={'stranger'} />)}\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nconst Friends = ({ login, users, allOtherUsers, myRecieved }) => {\n    const currentUser = users.find(u => u.username === login.username)\n    if (!currentUser) {\n        return null\n    }\n    const friends = allOtherUsers.filter(u => {\n        if (u.friends.includes(currentUser.id)) {\n            return u\n        }\n    })\n    if (myRecieved.length === 0) {\n        return (\n            <div>\n                <h5>My friends</h5>\n                <hr />\n                {friends.map(user => <UserLine key={user.id} user={user} users={users} login={login} status={'friend'} />)}\n            </div>\n        )\n\n    }\n    return (\n        <div>\n            <h5>Friend request</h5>\n            <hr />\n            {myRecieved.map(user => <UserLine key={user.id} user={user} users={users} login={login} status={'received'} />)}\n            <h5>My friends</h5>\n            <hr />\n            {friends.map(user => <UserLine key={user.id} user={user} users={users} login={login} status={'friend'} />)}\n        </div>\n    )\n\n}\n\nconst UserLine = ({ user, users, login, status }) => {\n    const dispatch = useDispatch()\n\n    const handleSendRequest = (id) => {\n        const currentUser = users.find(u => u.username === login.username)\n        const currentUserUpdated = { ...currentUser, requests: currentUser.requests.concat(id) }\n\n        const requestedFriend = users.find(u => u.username === user.username)\n        const requestedFriendUpdated = { ...requestedFriend, received: requestedFriend.received.concat(currentUser.id) }\n\n        dispatch(updateUser(currentUserUpdated))\n        dispatch(updateUser(requestedFriendUpdated))\n    }\n\n    const handleRemoveRequest = (id) => {\n        console.log('I changed my mind')\n        const currentUser = users.find(u => u.username === login.username)\n        const updatedRequests = currentUser.requests.filter(idInList => idInList !== id)\n        const updatedCurrentUser = { ...currentUser, requests: updatedRequests }\n\n        const secondUser = users.find(u => u.username === user.username)\n        const updatedReceived = secondUser.received.filter(idInList => idInList !== currentUser.id)\n        const updatedsecondUser = { ...secondUser, received: updatedReceived }\n\n        dispatch(updateUser(updatedCurrentUser))\n        dispatch(updateUser(updatedsecondUser))\n    }\n    const handleAccept = (id) => {\n        console.log('I want to be a friend with you!!!')\n        const currentUser = users.find(u => u.username === login.username)\n        const updatedReceived = currentUser.received.filter(idInList => idInList !== id)\n        const updatedFriends = currentUser.friends.concat(id)\n        const updatedCurrentUser = {\n            ...currentUser,\n            received: updatedReceived,\n            friends: updatedFriends\n        }\n\n        const secondUser = users.find(u => u.username === user.username)\n        const updatedRequests = secondUser.requests.filter(idInList => idInList !== currentUser.id)\n        const updatedSecondUser = {\n            ...secondUser,\n            requests: updatedRequests,\n            friends: secondUser.friends.concat(currentUser.id)\n        }\n\n        dispatch(updateUser(updatedCurrentUser))\n        dispatch(updateUser(updatedSecondUser))\n\n    }\n    const handleDecline = (id) => {\n        const currentUser = users.find(u => u.username === login.username)\n        const updatedReceived = currentUser.received.filter(idInList => idInList !== id)\n        const updatedCurrentUser = { ...currentUser, received: updatedReceived }\n\n        const secondUser = users.find(u => u.username === user.username)\n        const updatedRequests = secondUser.requests.filter(idInList => idInList !== currentUser.id)\n        const updatedSecondUser = { ...secondUser, requests: updatedRequests }\n\n        dispatch(updateUser(updatedCurrentUser))\n        dispatch(updateUser(updatedSecondUser))\n    }\n    const removeFriend = (id) => {\n        const currentUser = users.find(u => u.username === login.username)\n        const updatedRFriends = currentUser.friends.filter(idInList => idInList !== id)\n        const updatedCurrentUser = { ...currentUser, friends: updatedRFriends }\n\n        const secondUser = users.find(u => u.username === user.username)\n        const secondUpdatedFriends = secondUser.friends.filter(idInList => idInList !== currentUser.id)\n        const updatedSecondUser = { ...secondUser, friends: secondUpdatedFriends }\n\n        dispatch(updateUser(updatedCurrentUser))\n        dispatch(updateUser(updatedSecondUser))\n    }\n\n    if (status === 'request') {\n        return (\n            <div>\n                <Link to={`/user/${user.url}`}>{user.name}</Link>   <Button className=\"rightButton\" onClick={() => handleRemoveRequest(user.id)}>Remove request</Button>\n                <hr />\n            </div>\n        )\n\n    } else if (status === 'received') {\n        return (\n            <div>\n                <Link to={`/user/${user.url}`}>{user.name}</Link> <br />\n                <Button onClick={() => handleAccept(user.id)}>Accept</Button>  <Button onClick={() => handleDecline(user.id)}>Decline</Button>\n                <hr />\n            </div>\n        )\n\n    } else if (status === 'friend') {\n        return (\n            <div>\n                <Link to={`/user/${user.url}`}>{user.name}</Link> <Button className=\"rightButton\" onClick={() => removeFriend(user.id)}>Remove friend</Button>\n                <hr />\n            </div>\n        )\n\n    }\n    return (\n        <div>\n            <div className=\"col1\">\n                <Link to={`/user/${user.url}`} className=\"hiddenOverFlow\" >{user.name}</Link>\n            </div>\n            <div className=\"col2\">\n                <Button className=\"rightButton\" onClick={() => handleSendRequest(user.id)}>Make a friend</Button>\n                <hr />\n            </div>\n        </div>\n    )\n\n}\n\nexport default UsersList;\n\n\n\n","\nimport commentService from '../services/commentService'\n\nimport Notification from '../components/Notification'\nimport { setNotification, closeNotification } from '../reducers/notificationReducer'\n\nconst reducer = (state = [], action) => {\n    switch (action.type) {\n        case ('CREATE_NEW_COMMENT'):\n            return state.concat(action.data)\n        case ('INIT_COMMENTS'):\n            return action.data\n        case ('REMOVE_COMMENT'):\n            const newState = state.filter(p => p.id !== action.data)\n            return newState\n        default:\n    }\n    return state\n}\n\nexport const initializeComments = () => {\n    return async dispatch => {\n        const commentsFromServer = await commentService.getAll()\n        dispatch({\n            type: 'INIT_COMMENTS',\n            data: commentsFromServer,\n        })\n    }\n}\n\nexport const createNewComment = obj => {\n    return async dispatch => {\n        try {\n            const createdComment = await commentService.createNew(obj)\n            dispatch({\n                type: 'CREATE_NEW_COMMENT',\n                data: createdComment,\n            })\n        } catch (e) {\n            console.log('error caught in commentsReducer', e)\n            dispatch(setNotification('error', 'Comment can be at least 3 and at most 200 charachters long!'))\n            setTimeout(() => {\n                dispatch(closeNotification())\n            }, 3000)\n        }\n\n    }\n}\n\nexport const removeComment = (commentId) => {\n    return async dispatch => {\n        const res = await commentService.remove(commentId)\n        dispatch({\n            type: 'REMOVE_COMMENT',\n            data: commentId\n        })\n    }\n}\n\nexport default reducer","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { logout } from '../reducers/loginReducer'\nimport UsersList from './UsersList'\nimport { createNewComment } from '../reducers/commentsReducer'\nimport Button from 'react-bootstrap/Button'\n\nconst CommentForm = ({ postId, user }) => {\n    const dispatch = useDispatch()\n    const [value, setValue] = useState(\"\")\n\n    const handleCreateNewComment = () => {\n        const newComment = {\n            content: value,\n            postId: postId,\n            user: user.id \n        }\n        setValue('')    \n        dispatch(createNewComment(newComment))\n    }\n\n    return (\n        <div >\n            <h5>Comment</h5>\n            {/* <form onSubmit={() => handleCreateNewComment()}> */}\n                <textarea className=\"comment\" value={value} placeholder={'Write a comment'} onChange={event => setValue(event.target.value)}></textarea>\n                <br />\n                <Button onClick={() => handleCreateNewComment()} type='submit'>Comment</Button>\n            {/* </form> */}\n\n\n\n        </div>\n    )\n}\n\nexport default CommentForm;","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { logout } from '../reducers/loginReducer'\nimport UsersList from './UsersList'\nimport { createNewComment } from '../reducers/commentsReducer'\n\nimport {\n    Switch, Route, Link, useHistory,\n} from \"react-router-dom\"\n\n\nconst CommentList = ({ postId }) => {\n    const allComments = useSelector(state => state.comments)\n    const commentsToPost = allComments.filter(c => c.post === postId)\n    return (\n        <div>\n            <h5>Recent comments</h5>\n            <div className=\"comments-list\">\n                {commentsToPost.map(c => <CommentLine key={c.id} comment={c} />)}\n            </div>\n        </div>\n    )\n}\n\nconst CommentLine = ({ comment }) => {\n    const users = useSelector(state => state.users)\n    const creator = users.find(u => u.id === comment.user)\n    return (\n        <div>\n            {/* <span> {comment.content} <p className=\"by\">by {creator.name}</p></span> */}\n            <span> {comment.content} <p className=\"by\">by<Link className=\"by\" to={`/user/${creator.url}`}>&nbsp;{ creator.name}</Link></p> </span>\n            \n            <hr />\n        </div>\n    )\n\n}\n\nexport default CommentList;","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { removePost } from '../reducers/postsReducer'\nimport { updateUser } from '../reducers/usersReducer'\n\nimport CommentForm from \"./CommentForm\"\nimport CommentsList from \"./CommentsList\"\n\nimport Button from 'react-bootstrap/Button'\n\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\n// import Button from 'react-bootstrap/Button'\n\nimport {\n    Link,\n} from \"react-router-dom\"\n\n\nconst PostPage = () => {\n    const login = useSelector(state => state.login)\n    const allPosts = useSelector(state => state.posts)\n    const users = useSelector(state => state.users)\n    const currentUser = users.find(u => u.username === login.username)\n    if (!currentUser) {\n        return null\n    }\n\n    const friends = users.filter(u => {\n        if (u.friends.includes(currentUser.id)) {\n            return u\n        }\n    })\n    const friendsId = friends.map(f => f.id)\n    const postIds = friendsId.concat(currentUser.id)\n    const postsByFriends = allPosts.filter(p => {\n        if (postIds.includes(p.user)) {\n            return p\n        }\n    })\n\n    return (\n        <div >\n            <h4>Posts</h4>\n            <Accordion defaultActiveKey=\"0\">\n                {postsByFriends.map(post => <PostLine key={post.id} post={post} currentUser={currentUser} />)}\n            </Accordion>\n        </div>\n    )\n}\n\nconst PostLine = ({ post, currentUser }) => {\n    const dispatch = useDispatch()\n    const users = useSelector(state => state.users)\n    const handleDeletePost = () => {\n\n        const postsWithoutPostId = currentUser.posts.filter(idd => idd !== post.id)\n        const userUpdated = { ...currentUser, posts: postsWithoutPostId }\n\n\n        dispatch(removePost(post.id))\n        dispatch(updateUser(userUpdated))\n    }\n    if (post.user === currentUser.id) {\n        return (\n            <div>\n                <Card >\n                    <Card.Header>\n                        <Accordion.Toggle as={Card.Body} variant=\"link\" eventKey={post.id} >\n                            {post.content} <Button className=\"deleteButton\" onClick={() => handleDeletePost()}>delete</Button>\n                            \n                        </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey={post.id}>\n                        <Card.Body>\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                    <CommentForm postId={post.id} user={currentUser} />\n                                </div>\n                                <div className=\"col\">\n                                    <CommentsList postId={post.id} />\n                                </div>\n\n                            </div>\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            </div>\n        )\n    }\n    const postCreator = users.find(u => u.id === post.user)\n    return (\n        <div>\n            <Card>\n\n                <Card.Header>\n\n                    <Accordion.Toggle as={Card.Body} variant=\"link\" eventKey={post.id}>\n                        {post.content} <p className=\"by\">by<Link className=\"by\" to={`/user/${postCreator.url}`}>&nbsp;{ postCreator.name}</Link></p> \n                        \n                    </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey={post.id}>\n                    <Card.Body>\n\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <CommentForm postId={post.id} user={currentUser} />\n                            </div>\n                            <div className=\"col\">\n                                <CommentsList postId={post.id} />\n                            </div>\n\n                        </div>\n                    </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n        </div>\n    )\n}\n\nexport default PostPage;","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { createNewPost } from '../reducers/postsReducer'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\n\nconst PostForm = () => {\n    const [contentt, setContentt] = useState(\"\")\n    const dispatch = useDispatch()\n\n    const login = useSelector(state => state.login)\n    if (!login) {\n        return null\n    }\n    const handleAddPost = (event) => {\n        event.preventDefault()\n        const newPost = {\n            content: contentt,\n            likes: 0\n        }\n        setContentt('')\n        dispatch(createNewPost(newPost))\n\n    }\n\n    return (\n        <div >\n            <h4>Create new post</h4>\n            <form onSubmit={handleAddPost}>\n                <textarea className=\"post\" value={contentt} placeholder={'Write a new post'} onChange={event => setContentt(event.target.value)}></textarea>\n                <br />\n                <Button type='submit'>Create new post</Button>\n            </form>\n\n        </div>\n    )\n}\n\n\n\nexport default PostForm;","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { logout } from '../reducers/loginReducer'\nimport PostPage from './PostPage'\nimport PostForm from './PostForm'\nimport TopBar from './TopBar'\n\nimport SideBarNavigation from './SideBarNavigation'\n\nconst HomeView = () => {\n    const login = useSelector(state => state.login)\n    if (!login) {\n        return null\n    }\n\n    return (\n\n\n        <div >\n            <div className=\"container\">\n                <TopBar />\n                <hr />\n                <div className=\"row\">\n                    <div className=\"col-sm-2\">\n                        <SideBarNavigation />\n                    </div>\n                    <div className=\"col-sm-7\">\n                        <PostPage />\n                    </div>\n                    <div className=\"col-sm-3\">\n                        <PostForm />\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default HomeView;","import skillService from '../services/skillService'\nimport Notification from '../components/Notification'\nimport { setNotification, closeNotification } from '../reducers/notificationReducer'\n\nconst reducer = (state = [], action) => {\n    switch (action.type) {\n        case ('CREATE_NEW_SKILL'):\n            return state.concat(action.data)\n        case ('INIT_SKILLS'):\n            return action.data\n        case ('REMOVE_SKILL'):\n            const newState = state.filter(s => s.id !== action.data)\n            return newState\n        case 'UPDATE_SKILL': {\n            const id = action.data.id\n            return state.map(user => user.id !== id ? user : action.data)\n        }\n        default:\n    }\n    return state\n}\n\nexport const updateSkill = (skill) => {\n    return async dispatch => {\n        const updated = await skillService.update(skill.id, skill)\n        dispatch({\n            type: 'UPDATE_SKILL',\n            data: updated,\n        })\n    }\n}\n\nexport const initializeSkills = () => {\n    return async dispatch => {\n        const skillsFromServer = await skillService.getAll()\n        dispatch({\n            type: 'INIT_SKILLS',\n            data: skillsFromServer,\n        })\n    }\n}\n\nexport const createNewSkill = obj => {\n    return async dispatch => {\n        try {\n            const createdSkill = await skillService.createNew(obj)\n            dispatch({\n                type: 'CREATE_NEW_SKILL',\n                data: createdSkill,\n            })\n        } catch (e) {\n            console.log('error caught in postReducer', e)\n            dispatch(setNotification('error', 'Skill should be at least 1 and at most 20 charachters long!'))\n            setTimeout(() => {\n                dispatch(closeNotification())\n            }, 3000)\n        }\n\n    }\n}\n\nexport const removeSkill = (skillId) => {\n    return async dispatch => {\n        const res = await skillService.remove(skillId)\n        dispatch({\n            type: 'REMOVE_SKILL',\n            data: skillId\n        })\n    }\n}\n\nexport default reducer","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { createNewSkill, removeSkill } from '../reducers/skillsReducer'\nimport { updateUser } from '../reducers/usersReducer'\nimport Button from 'react-bootstrap/Button'\n\nconst SkillForm = () => {\n    const [value, setValue] = useState(\"\")\n    const dispatch = useDispatch()\n\n    const login = useSelector(state => state.login)\n    const allSkills = useSelector(state => state.skills)\n\n    const users = useSelector(state => state.users)\n    const currentUser = users.find(u => u.username === login.username)\n    const userSkills = allSkills.filter(s => s.user === currentUser.id)\n    const skillsToShow = userSkills.sort((e1, e2) => e2.likes.length - e1.likes.length)\n\n    const handleCreateSkill = (event) => {\n        event.preventDefault()\n        const newSkill = {\n            content: value,\n            likes: []\n        }\n        setValue('')\n        dispatch(createNewSkill(newSkill))\n    }\n\n    return (\n        <div >\n            <h5>Add new skill</h5>\n\n            <form onSubmit={handleCreateSkill}>\n                <input value={value} placeholder={'New skill'} onChange={event => setValue(event.target.value)} />\n                <Button type='submit'>Add new skill</Button>\n            </form>\n            <hr />\n            {skillsToShow.map(skill => <SkillLine key={skill.id} skill={skill} creator={currentUser} />)}\n\n\n        </div>\n    )\n}\n\nconst SkillLine = ({ skill, creator }) => {\n    const dispatch = useDispatch()\n    const handleDeleteSkill = (id) => {\n        const updatedSkillList = creator.skills.filter(skillId => skillId !== id)\n        const updatedUser = { ...creator, skills: updatedSkillList }\n\n        dispatch(removeSkill(id))\n        dispatch(updateUser(updatedUser))\n    }\n\n    return (\n        <div >\n             <p key={skill.id}>{skill.content} likes: {skill.likes.length} <Button className=\"deleteButton\" onClick={() => handleDeleteSkill(skill.id)}>Delete</Button></p>\n             <hr />\n        </div>\n    )\n}\n\nexport default SkillForm;","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport TopBar from './TopBar'\nimport SideBarNavigation from './SideBarNavigation'\nimport SkillForm from './SkillForm'\n\n\n\nconst PersonalPage = () => {\n    const login = useSelector(state => state.login)\n    const allPosts = useSelector(state => state.posts)\n    const users = useSelector(state => state.users)\n    const currentUser = users.find(u => u.username === login.username)\n    if (!currentUser) {\n        return null\n    }\n    const userPosts = allPosts.filter(u => u.user === currentUser.id)\n    return (\n\n        <div className=\"container\">\n            <TopBar />\n            <hr />\n            <div className=\"row\">\n                <div className=\"col-sm-2\">\n                    <SideBarNavigation />\n                </div>\n                <div className=\"col-sm-7\">\n                    <h4>Me</h4>\n                    <h5>My posts:</h5>\n                    <hr />\n                    {userPosts.map(p => <p key={p.id}>{p.content} <hr /></p>)}\n                </div>\n                <div className=\"col-sm-3\">\n                    <h4>My skills</h4>\n                    <SkillForm />\n                    \n                </div>\n\n            </div>\n        </div>\n\n\n\n\n\n\n\n    )\n}\n\nexport default PersonalPage;","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport TopBar from './TopBar'\nimport SideBarNavigation from './SideBarNavigation'\nimport { updateSkill } from '../reducers/skillsReducer'\n\nimport {\n    useParams\n} from \"react-router-dom\"\n\nconst UserPage = () => {\n    const url = useParams().url\n    const allPosts = useSelector(state => state.posts)\n    const allSkills = useSelector(state => state.skills)\n    const users = useSelector(state => state.users)\n    const user = users.find(u => u.url === url)\n    const userSkills = allSkills.filter(s => s.user === user.id)\n    if (!user) {\n        return null\n    }\n    const userPosts = allPosts.filter(u => u.user === user.id)\n    const skillsToShow = userSkills.sort((e1, e2) => e2.likes.length - e1.likes.length)\n                        \n    return (\n        <div className=\"container\">\n            <TopBar />\n            <hr />\n            <div className=\"row\">\n                <div className=\"col-sm-2\">\n                    <SideBarNavigation />\n                </div>\n                <div className=\"col-sm-7\">\n                    <h4>{user.name}</h4>\n                    <h5>{user.name}'s posts:</h5>\n                    {userPosts.map(p => <p key={p.id}>{p.content}</p>)}\n                </div>\n                <div className=\"col-sm-3\">\n                    <h4>{user.name}'s skills</h4>\n                    <hr />\n                    {skillsToShow.map(skill => <SkillLine key={skill.id} skill={skill} />)}\n                </div>\n\n            </div>\n        </div>\n\n    )\n}\n\nconst SkillLine = ({ skill }) => {\n    const dispatch = useDispatch()\n    const login = useSelector(state => state.login)\n    const users = useSelector(state => state.users)\n    const currentUser = users.find(u => u.username === login.username)\n\n    const handleLike = () => {\n        // console.log('I want to like this skill', id)\n        const updatedLikeList = skill.likes.concat(currentUser.id)\n        const updatedSkill = { ...skill, likes: updatedLikeList }\n        dispatch(updateSkill(updatedSkill))\n    }\n\n    if (skill.likes.includes(currentUser.id)) {\n        return (\n            <div >\n                <p key={skill.id}>{skill.content}: {skill.likes.length} likes. You liked it!</p>\n                <hr />\n            </div>\n        )\n    }\n\n    return (\n        <div >\n            <p key={skill.id}>{skill.content}: {skill.likes.length} likes. <button onClick={() => handleLike()}>like!</button></p>\n            <hr />\n        </div>\n    )\n}\n\nexport default UserPage;","import React, { useEffect } from 'react'\nimport LoginView from './components/LoginView'\nimport UserCreationView from './components/UserCreationView'\nimport HomeView from './components/HomeView'\nimport { initializeUsers } from './reducers/usersReducer'\nimport { initLogin } from './reducers/loginReducer'\nimport { initializePosts } from './reducers/postsReducer'\nimport { initializeComments } from './reducers/commentsReducer'\nimport { initializeSkills } from './reducers/skillsReducer'\nimport { useSelector, useDispatch } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport UsersList from './components/UsersList'\nimport PersonalPage from './components/PersonalPage'\nimport UserPage from './components/UserPage'\nimport { setNotification, closeNotification } from './reducers/notificationReducer'\n\nimport {\n  Switch, Route,\n} from \"react-router-dom\"\n\nconst App = () => {\n  console.log('app is running')\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(initializeComments())\n    dispatch(initializeUsers())\n    dispatch(initLogin())\n    dispatch(initializePosts())\n    dispatch(initializeSkills())\n    dispatch(closeNotification())\n  }, [dispatch])\n  const login = useSelector(state => state.login)\n\n  const users = useSelector(state => state.users)\n\n  return (\n\n    <div>\n      {/* <Notification /> */}\n\n      <Switch>\n\n        <Route path=\"/connections\">\n          <UsersList />\n        </Route>\n\n        <Route path=\"/personal\">\n          <PersonalPage />\n        </Route>\n\n        <Route path=\"/user/:url\">\n          <UserPage />\n        </Route>\n\n        <Route path=\"/home\">\n          <HomeView />\n        </Route>\n\n        <Route path=\"/createUser\">\n          <UserCreationView />\n        </Route>\n\n        <Route path=\"/\">\n          {login !== null && <HomeView />}\n          {login === null && <LoginView />}\n        </Route>\n\n      </Switch>\n\n    </div>\n  )\n}\n\nexport default App;\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\n\nimport usersReducer from './reducers/usersReducer'\nimport loginReducer from './reducers/loginReducer'\nimport postsReducer from './reducers/postsReducer'\nimport commentsReducer from './reducers/commentsReducer'\nimport skillsReducer from './reducers/skillsReducer'\nimport notificationReducer from './reducers/notificationReducer'\n\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nconst reducer = combineReducers({\n    users: usersReducer,\n    login: loginReducer,\n    posts: postsReducer,\n    comments: commentsReducer,\n    skills: skillsReducer,\n    notification: notificationReducer,\n})\n\nconst store = createStore(\n    reducer,\n    composeWithDevTools(applyMiddleware(thunk))\n)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport './index.css' \n\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\"\n\nimport store from './Store'\n\nReactDOM.render(\n\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n\n\n  ,\n  document.getElementById('root'))\n"],"sourceRoot":""}